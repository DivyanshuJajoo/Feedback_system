<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <link href="/assets/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="/assets/css/style.css" rel="stylesheet">
    <link href="/assets/css/styles2.css" rel="stylesheet">

    <title>Mapping</title>

    <style>

        .slider {
            display: flex;
            justify-content: center;
            margin-bottom: 20px;
            gap: 10px;
        }

        .slider button {
            padding: 10px 20px;
            border: none;
            background-color: #9850E4;
            color: #fff;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.3s;
            font-size: 16px;
        }

        .slider button.active {
            background-color: #9850E4;
        }

        .slider button:hover {
            background-color: #9850E4;
            transform: scale(1.05);
        }

        .tab-content {
            display: none;
        }

        .tab-content.active {
            display: block;
        }

        .tab-content form button {
    justify-self: start; /* Align the button to the left side */
    width: auto; /* Auto-adjust the width based on the content */
    padding: 10px 20px; /* Standard padding */
    font-size: 16px;
    border: none;
    background-color: #9850E4;
    color: white;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s;
}

        .main form {
            display: grid;
            gap: 10px;
            margin-bottom: 20px;
        }

        .main form label {
            font-weight: bold;
            margin-bottom: 5px;
        }

        .main form select, .main form input[type="text"], .main form input[type="number"] {
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            width: 100%;
            box-sizing: border-box;
            font-size: 16px;
            transition: border-color 0.3s;
        }

        .main form select:focus, .main form input[type="text"]:focus, .main form input[type="number"]:focus {
            border-color: #9850E4;
            outline: none;
        }

        .main button {
            padding: 10px 20px;
            border: none;
            background-color: #9850E4;
            color: #fff;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
            font-size: 16px;
        }

        .main button:hover {
            background-color: #9850E4;
        }

        .main table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        .main table th, .main table td {
            border: 1px solid #ddd;
            padding: 12px;
            text-align: left;
        }

        .main table th {
            background-color: #f2f2f2;
            font-weight: bold;
        }

        .main table a {
            color: #9850E4;
            text-decoration: none;
            margin-right: 10px;
        }

        .main table a:hover {
            text-decoration: underline;
        }
        @media (min-width: 875px)  {
    .tab-content form {
        grid-template-columns: 1fr 1.5fr; /* Adjusted ratio for smaller screens */
    }

    .tab-content form label {
        font-size: 14px; /* Smaller labels for compact layout */
    }

    .tab-content form input,
    .tab-content form select {
        font-size: 14px; /* Slightly smaller input fields */
    }

    .tab-content h3 {
        text-align: center; /* Center-align the section heading */
        margin-bottom: 20px;
    }
    .tab-content form button {
    grid-column: 1 / -1; /* Make the button span the full width below the form content */
    justify-self: left; /* Center the button */
    width: 50%; /* Set button width relative to the form */
    padding: 10px 20px; /* Standard padding for a neat look */
    font-size: 16px;
    border: none;
    background-color: #9850E4;
    color: white;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}
}
.btn-danger{
          border-radius: 8px;
        }
        .btn-danger:hover{
          background-color:white;
          font-weight: bold;
          border-color:#9850E4;
          color:#9850E4;
        }
    </style>
</head>
<body>

    <div class="sidebar">
        <h4>Admin Panel</h4>
        <a href="/admin"><i class="fas fa-home"></i> Dashboard</a>
        <!-- <a href="/collegeDetails"><i class="fas fa-building"></i> College Details</a> -->
        <a href="/discipline"><i class="fas fa-book"></i> Discipline</a>
        <a href="/branches"><i class="fas fa-code-branch"></i> Branches</a>
        <a href="/subjects"><i class="fas fa-book-open"></i> Subjects</a>
        <a href="/faculty"><i class="fas fa-user-tie"></i> Faculty</a>
        <a href="/mapping" class="active"><i class="fas fa-map"></i> Mapping</a>
        <a href="/server"><i class="fas fa-server"></i>  Semester Control</a>
        <a href="/report"><i class="fas fa-chart-line"></i> Report</a>
        <a href="/teacher-remarks"><i class="fas fa-comment"></i> Faculty Remarks</a>
        <a href="/faculty-feedback"><i class="fas fa-download"></i> Feedback Downloadk</a>
        <form action="/logout?_method=DELETE" method="POST" style="display:inline;">
            <button type="submit" class="btn btn-danger">Logout</button>
        </form>
    </div>

<div class="main">
    <div class="slider">
        <button id="semesterMappingBtn" class="active">Subject to Semester Mapping</button>
        <button id="facultyMappingBtn">Faculty to Subject Mapping</button>
        <button id="studentMappingBtn">Student to Subject Mapping</button>
    </div>
    
    <div id="semesterMapping" class="tab-content active">
     <div class="card">
        <h1>Subject to Semester Mapping</h1>
        <h8>Note: Map subject to garbage semester value 11 if it need not be mapped to any semester. Also don't map electives to any semester. Electives can be mapped directly to students using student to subject mapping section.</h8>
        <form id="subjectSemesterForm" action="/mapping/subjectSemester" method="POST">
            <div style="display: grid; gap: 10px; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));">
                <label for="discipline">Discipline:</label>
                <select id="discipline" name="discipline" required>
                    <% disciplines.forEach(discipline => { %>
                        <option value="<%= discipline.id %>"><%= discipline.name %></option>
                    <% }); %>
                </select>

                <label for="branch">Branch:</label>
                <select id="branch" name="branch" required>
                    <!-- Options will be populated dynamically -->
                </select>

                <label for="year">Year:</label>
                <select id="year" name="year" required>
                    <!-- Options will be populated dynamically based on discipline duration -->
                </select>

                <label for="semester">Semester:</label>
                <input type="number" id="semester" name="semester" min="1" required>

                <label for="subject">Subject:</label>
                <select id="subject" name="subject" required>
                    <!-- Options will be populated dynamically -->
                </select>
            </div>

            <button type="submit">Map Subject to Semester</button>
        </form>

        <h2>Subject to Semester Mapping Table</h2>
        <table>
            <thead>
            <tr>
                <th>Subject</th>
                <th>Semester</th>
                
            </tr>
            </thead>
            <tbody>
            <% subjectSemesterMappings.forEach(mapping => { %>
                <tr>
                    <td><%= mapping.subjectname %></td>
                    <td><%= mapping.semester %></td>
                    
                </tr>
            <% }); %>
            </tbody>
        </table>
    </div>
    </div>

    <div id="facultyMapping" class="tab-content">
        <div class="card">
        <h1>Faculty to Subject Mapping</h1>
        <form id="facultySubjectForm" action="/mapping/facultySubject" method="POST">
            <div style="display: grid; gap: 10px; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));">
                <label for="discipline2">Discipline:</label>
                <select id="discipline2" name="discipline" required>
                    <% disciplines.forEach(discipline => { %>
                        <option value="<%= discipline.id %>"><%= discipline.name %></option>
                    <% }); %>
                </select>

                <label for="branch2">Branch:</label>
                <select id="branch2" name="branch" required>
                    <!-- Options will be populated dynamically -->
                </select>

                <label for="faculty">Faculty:</label>
                <select id="faculty" name="faculty" required>
                    <!-- Options will be populated dynamically -->
                </select>

                <label for="subject2">Subject:</label>
                <select id="subject2" name="subject" required>
                    <!-- Options will be populated dynamically -->
                </select>

                <label for="section">Section:</label>
                <input type="text" id="section" name="section" maxlength="1" required>

                <label for="isElective">Is Elective:</label>
                <select id="isElective" name="is_elective" required>
                    <option value="true">Yes</option>
                    <option value="false">No</option>
                </select>
            </div>
            

            <button type="submit">Map Faculty to Subject</button>
        </form>

        <h2>Faculty to Subject Mapping Table</h2>
        <table>
            <thead>
            <tr>
                <th>Faculty</th>
                <th>Subject</th>
                <th>Section</th>
                
            </tr>
            </thead>
            <tbody>
            <% facultySubjectMappings.forEach(mapping => { %>
                <tr>
                    <td><%= mapping.facultyname %></td>
                    <td><%= mapping.subjectname %></td>
                    <td><%= mapping.section %></td>
                    
                </tr>
            <% }); %>
            </tbody>
        </table>
    </div>
    </div>
    <div id="studentMapping" class="tab-content">
        <div class="card">
            <h1>Upload Student Subject Excel File For Electives Only</h1>
            <p><strong>File Format:</strong> The file should be formatted with the following columns: 
                <code>unique_id, Name, Branch Name, Year, Section, Discipline ID, Semester, Subject 1, Subject 2, ...</code>
                </p>

                <div class="form-group d-flex align-items-center">
                    <label class="mr-2">Sample Excel file:</label>
                    <a href="/downloads/student_subject_mapping.xlsx" download class="btn btn-secondary">
                       Download
                    </a>
                   </div>

            <form action="/api/mapping/studentSubject" method="POST" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="studentFile">Choose Excel File:</label>
                    <input type="file" id="studentFile" name="studentFile" accept=".xlsx, .xls" class="form-control-file" required>
                </div>
                <button type="submit" class="btn btn-primary">Upload</button>
            </form>
        </div>
       
    </div>
</div>

<script src="/assets/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const semesterMappingBtn = document.getElementById('semesterMappingBtn');
        const facultyMappingBtn = document.getElementById('facultyMappingBtn');
        const semesterMapping = document.getElementById('semesterMapping');
        const facultyMapping = document.getElementById('facultyMapping');

        semesterMappingBtn.addEventListener('click', function () {
            semesterMapping.classList.add('active');
            facultyMapping.classList.remove('active');
            semesterMappingBtn.classList.add('active');
            facultyMappingBtn.classList.remove('active');
        });

        facultyMappingBtn.addEventListener('click', function () {
            facultyMapping.classList.add('active');
            semesterMapping.classList.remove('active');
            facultyMappingBtn.classList.add('active');
            semesterMappingBtn.classList.remove('active');
        });

        studentMappingBtn.addEventListener('click', function () {
            facultyMapping.classList.remove('active');
            semesterMapping.classList.remove('active');
            facultyMappingBtn.classList.remove('active');
            semesterMappingBtn.classList.remove('active');
            studentMapping.classList.add('active');
            studentMappingBtn.classList.add('active');
        });

        const disciplineSelect = document.getElementById('discipline');
        const branchSelect = document.getElementById('branch');
        const subjectSelect = document.getElementById('subject');
        const yearSelect = document.getElementById('year');

        disciplineSelect.addEventListener('change', function () {
            fetch(`/api/branches/${this.value}`)
                .then(response => response.json())
                .then(data => {
                    branchSelect.innerHTML = '<option value="">Select Branch</option>';
                    data.forEach(branch => {
                        branchSelect.innerHTML += `<option value="${branch.branch_id}">${branch.branch_name}</option>`;
                    });
                });

            fetch(`/api/discipline/${this.value}/duration`)
                .then(response => response.json())
                .then(data => {
                    yearSelect.innerHTML = '<option value="">Select Year</option>';
                    for (let i = 1; i <= data.duration; i++) {
                        yearSelect.innerHTML += `<option value="${i}">${i}</option>`;
                    }
                });
        });

        branchSelect.addEventListener('change', function () {
            fetch(`/api/subjects/${this.value}`)
                .then(response => response.json())
                .then(data => {
                    subjectSelect.innerHTML = '<option value="">Select Subject</option>';
                    data.forEach(subject => {
                        subjectSelect.innerHTML += `<option value="${subject.subject_id}">${subject.name}</option>`;
                    });
                });
        });

        // Faculty Mapping Section
        const disciplineSelect2 = document.getElementById('discipline2');
        const branchSelect2 = document.getElementById('branch2');
        const subjectSelect2 = document.getElementById('subject2');
        const facultySelect = document.getElementById('faculty');

        disciplineSelect2.addEventListener('change', function () {
            // Clear the branch and faculty selects when discipline changes
            branchSelect2.innerHTML = '<option value="">Select Branch</option>';
            facultySelect.innerHTML = '<option value="">Select Faculty</option>';
            
            fetch(`/api/branches/${this.value}`)
                .then(response => response.json())
                .then(data => {
                    branchSelect2.innerHTML = '<option value="">Select Branch</option>';
                    data.forEach(branch => {
                        branchSelect2.innerHTML += `<option value="${branch.branch_id}">${branch.branch_name}</option>`;
                    });
                });
        });

        branchSelect2.addEventListener('change', function () {
            // Fetch and populate subjects based on branch_id
            fetch(`/api/subjects/${this.value}`)
                .then(response => response.json())
                .then(data => {
                    subjectSelect2.innerHTML = '<option value="">Select Subject</option>';
                    data.forEach(subject => {
                        subjectSelect2.innerHTML += `<option value="${subject.subject_id}">${subject.name}</option>`;
                    });
                });

            // Fetch and populate faculty based on branch_id
            fetch(`/api/faculty/${this.value}`)
                .then(response => response.json())
                .then(data => {
                    facultySelect.innerHTML = '<option value="">Select Faculty</option>';
                    data.forEach(faculty => {
                        facultySelect.innerHTML += `<option value="${faculty.id}">${faculty.name}</option>`;
                    });
                });
        });

        document.querySelectorAll('.delete-btn').forEach(button => {
            button.addEventListener('click', function (event) {
                event.preventDefault();
                const id = this.getAttribute('data-id');
                if (confirm('Are you sure you want to delete this item?')) {
                    fetch(`/api/mapping/delete/${id}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => {
                        if (response.ok) {
                            alert('Item deleted successfully.');
                            location.reload();
                        } else {
                            alert('Failed to delete item.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
                }
            });
        });
    });
</script>

</body>
<%- include('partials/footer') %>
</html>